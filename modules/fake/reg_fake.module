<?php
/**
* Our module to create fake registration data for testing/development purposes.
*
* @author Douglas Muth <http://www.dmuth.org/>
*
*/


require_once("devel.inc.php");


/**
* Our init hook.
*/
function reg_fake_init() {
	reg_fake_devel();
} // End of reg_log_init()



/**
* This function creates a lot of fake data for our form.
*
* @param array $data The associative array of data from our form.
*/
function reg_fake_get_data(&$data) {

	$data["badge_name"] = reg_fake_get_badge_name();
	$data["first"] = reg_fake_get_first_name();
	$data["middle"] = reg_fake_get_first_name();
	$data["last"] = reg_fake_get_last_name();

	//
	// Yes, I know this might give us an invalid date like February 31st.
	//
	$data["birthdate"] = reg_fake_get_number(1900, 2005)
		. "-" . reg_fake_get_number(1, 12)
		. "-" . reg_fake_get_number(1, 31)
		;

	$data["billing_name"] = reg_fake_get_first_name() . " "
		. reg_fake_get_last_name();
	$data["address1"] = reg_fake_get_number(1, 1000) . " " 
		. reg_fake_get_string();
	$data["address2"] = reg_fake_get_string();
	$data["city"] = reg_fake_get_string() . " " . reg_fake_get_string();
	$data["state"] = reg_fake_get_string();
	$data["zip"] = reg_fake_get_number(10000, 99999) . "-" 
		. sprintf("%04d", reg_fake_get_number(0, 9999));
	$data["country"] = reg_fake_get_string();

	$data["shipping_checkbox"] = true;
	$data["shipping_name"] = reg_fake_get_first_name() . " " 
		. reg_fake_get_last_name();
	$data["shipping_address1"] = reg_fake_get_number(1, 1000) . " " 
		. reg_fake_get_string();
	$data["shipping_address2"] = reg_fake_get_string();
	$data["shipping_city"] = reg_fake_get_string() . " " 
		. reg_fake_get_string();
	$data["shipping_state"] = reg_fake_get_string();
	$data["shipping_zip"] = reg_fake_get_number(10000, 99999) . "-" 
		. sprintf("%04d", reg_fake_get_number(0, 9999));
	$data["shipping_country"] = reg_fake_get_string();
	$data["no_receipt"] = reg_fake_get_random_from_set(array(true, false));

	$data["email"] = reg_fake_get_string() . "@" . reg_fake_get_string()
		. "." . reg_fake_get_string(3)
		;
	$data["email2"] = $data["email"];
	$data["phone"] = 
		reg_fake_get_number(0, 999)
		. "-"
		. reg_fake_get_number(0, 99999)
		. "-"
		. sprintf("%04d", reg_fake_get_number(1, 9999))
		;
	$data["shirt_size_id"] = reg_fake_get_number(1, 5);
	$data["conduct"] = 1;
	$data["cc_type_id"] = reg_fake_get_number(1, 4);
	$data["cc_num"] = reg_fake_get_cc_num();
	$data["cvv"] = reg_fake_get_number(100, 999);
	$data["cc_exp"]["month"] = reg_fake_get_number(1, 12);
	$data["cc_exp"]["year"] = date("Y") + reg_fake_get_number(1, 5);
	$data["donation"] = reg_fake_get_number(0, 250)
		. "." . sprintf("%02d", reg_fake_get_number(0, 99))
		;
	$data["badge_cost"] = reg_fake_get_number(0, 250)
		. "." . sprintf("%02d", reg_fake_get_number(0, 99))
		;
	$data["reg_payment_type_id"] = reg_fake_get_number(1, 10);
	$data["reg_type_id"] = reg_fake_get_number(1, 12);

	//
	// What we're going to do here is get a list of valid levels,
	// then get a random value somewhere between zero and the number
	// of levels.
	//
	// From there, we'll get a list of all keys from that aray in a
	// separate array with sequential keys, index that array based on 
	// the random value, and have the final reg_level_id to set in 
	// the form.
	//
	$levels = reg_get_valid_levels();
	$index = reg_fake_get_number(0, (count($levels) - 1));
	$level_keys = array_keys($levels);
	$level_index = $level_keys[$index];
	$data["reg_level_id"] = $level_index;

} // End of reg_fake_get_data()

/**
* Generate a random string.
*/
function reg_fake_get_string($max = 8) {

	$retval = "";

	for ($i=0; $i<$max; $i++) {
		$retval .= chr(mt_rand(65, 122));
	}

	return($retval);

} // End of reg_fake_get_string()


/**
* Generate a random number.
*/
function reg_fake_get_number($min = 0, $max = 100) {

	$retval = mt_rand($min, $max);

	return($retval);

} // End of reg_fake_get_number()


/**
* Generate a random credit card number.
*/
function reg_fake_get_cc_num() {

	$retval = "";
	$retval .=
		sprintf("%04d", reg_fake_get_number(0, 9999))
		. " " . sprintf("%04d", reg_fake_get_number(0, 9999))
		. " " . sprintf("%04d", reg_fake_get_number(0, 9999))
		. " " . sprintf("%04d", reg_fake_get_number(0, 9999))
		;

	return($retval);

} // End of reg_fake_get_cc_num()


/**
* Return a random array element.
*/
function reg_fake_get_random_from_set($items) {

	$len = count($items) - 1;
	$index = mt_rand(0, $len);
	$retval = $items[$index];

	return($retval);

} // End of reg_fake_get_random_from_set()


/**
* Create a fake badge name.
*/
function reg_fake_get_badge_name() {

	$names = array("Fluffy", "Wolfy", "Skunky", "Lion", "Leopard",
		"Catnip", "Mouse", "Paws");

	$retval = reg_fake_get_random_from_set($names) 
		. reg_fake_get_number(0, 99);

	return($retval);

} // End of reg_fake_get_badge_name()


/**
* Create a fake first name.
*/
function reg_fake_get_first_name() {

	$names = array("Sam", "Doug", "Dave", "John", "Mark", "Dan", "Phil", 
		"Joe");

	$retval = reg_fake_get_random_from_set($names);

	return($retval);
		
} // End of reg_fake_get_first_name()


/**
* Create a fake last name.
*/
function reg_fake_get_last_name() {

	$names = array("Conway", "Muth", "Smith", "Johnson", "Phillips", 
		"Stevensen");

	$retval = reg_fake_get_random_from_set($names);

	return($retval);

} // End of reg_fake_get_last_name()


/**
* This function selects a random item from a list and returns it.
*
* @param array $list An array of items to select from.  It does NOT
*	need to be a scalar array.
*
* @return mixed A random item from the list.
*/
function reg_fake_get_item($list) {

	$index = reg_fake_get_number(0, (count($list) - 1));
	$list_keys = array_keys($list);
	$list_index = $list_keys[$index];

	$retval = $list[$list_index];

	return($retval);

} // End of reg_fake_get_item()



