<?php
/**
* These tests test the errors on our admin adding form.
*/
include_once("Reg_Admin_Members_Functional.test");

class Reg_Admin_Members_Errors_Functional_Test 
	extends DrupalTestCase {

	/**
	* Implementation of getInfo() for information
	*/
	function getInfo() {
		return array(
			"name" => t("/reg/admin/members Error Function Test"),
			//"desc" => t("Test out the reg class"),
			"group" => t("Registration System Functional Tests"),
			);
	}


	/**
	* Test all errors on the registration form.
	*/
	function testErrors() {

		$this->core->checkSettings();

		//
		// Log in as a user with admin privs to the reg system
		//
		$web_user = $this->drupalCreateUserRolePerm($this->reg->perm());

		$output = $this->drupalLoginUser($web_user);

		//
		// Test nothing filled in
		//
		$url = "admin/reg/members/add";
		$edit = array();
		$this->drupalPostRequest($url, $edit, t("Register"));
		$this->assertWantedRaw(t("Membership Information"));
		$this->assertWantedRaw(t("Billing Information"));
		$this->assertWantedRaw(t("Payment Information"));

		$this->assertWantedRaw(t("First Name field is required."));
		$this->assertWantedRaw(t("Last Name field is required."));
		$this->assertWantedRaw(t("Your email address field is required."));
		$this->assertWantedRaw(t("Confirm email address field is required."));
		$this->assertWantedRaw(t("Billing Address Line 1 field is required."));
		$this->assertWantedRaw(t("City field is required."));
		$this->assertWantedRaw(t("State field is required."));
		$this->assertWantedRaw(t("Zip Code field is required."));
		$this->assertWantedRaw(t("Your phone number field is required."));
		$this->assertWantedRaw(t("Date of birth is set to today. Did you forget to enter it?"));
		$this->assertWantedRaw(t("Payment Type field is required."));

		//
		// Test everything filled in, but the email address is mismatched.
		//
		$edit = array();
		$edit["first"] = "Test first name";
		$edit["last"] = "Test last name";
		$edit["email"] = "test email";
		$edit["email2"] = "test email2";
		$edit["address1"] = "Test address";
		$edit["city"] = "Test City";
		$edit["state"] = "Test State";
		$edit["zip"] = "Test Zip";
		$edit["phone"] = "Test Phone";
		$edit["cc_num"] = "Test credit card num";
		$edit["birthdate-year"] = "2000";
		$edit["reg-payment-type-id"] = "Credit Card";
		$this->drupalPostRequest($url, $edit, t("Register"));
		$this->assertWantedRaw(t("Membership Information"));
		$this->assertWantedRaw(t("Billing Information"));
		$this->assertWantedRaw(t("Payment Information"));

		$this->assertNoUnwantedRaw(t("First Name field is required."));
		$this->assertNoUnwantedRaw(t("Last Name field is required."));
		$this->assertNoUnwantedRaw(t("Your email address field is required."));
		$this->assertNoUnwantedRaw(t("Confirm email address field is required."));
		$this->assertNoUnwantedRaw(t("Billing Address Line 1 field is required."));
		$this->assertNoUnwantedRaw(t("City field is required."));
		$this->assertNoUnwantedRaw(t("State field is required."));
		$this->assertNoUnwantedRaw(t("Zip Code field is required."));
		$this->assertNoUnwantedRaw(t("Your phone number field is required."));
		$this->assertNoUnwantedRaw(t("Credit Card Number field is required."));
		$this->assertNoUnwantedRaw(t("Security Code field is required."));
		$this->assertNoUnwantedRaw(t("Date of birth is set to today. Did you forget to enter it?"));
		$this->assertNoUnwantedRaw(t("Payment Type field is required."));

		unset($edit["birthdate-year"]);
		$edit["email2"] = $edit["email"];
		$this->drupalPostRequest($url, $edit, t("Register"));
		$this->assertWantedRaw(t("Membership Information"));
		$this->assertWantedRaw(t("Billing Information"));
		$this->assertWantedRaw(t("Payment Information"));

		$this->assertNoUnwantedRaw(t("Confirm email address field is required."));
		$this->assertWantedRaw(t("Date of birth is set to today. Did you forget to enter it?"));

		unset($edit["email"]);
		unset($edit["email2"]);
		$this->drupalPostRequest($url, $edit, t("Register"));
		$this->assertWantedRaw(t("Membership Information"));
		$this->assertWantedRaw(t("Billing Information"));
		$this->assertWantedRaw(t("Payment Information"));

		$this->assertWantedRaw(t("Your email address field is required."));
		$this->assertWantedRaw(t("Confirm email address field is required."));

	} // End of testErrors()


	function setUp() {

		$this->factory = new reg_factory();
		$this->reg = $this->factory->get_object("reg");

		//
		// @todo
		// I eventually need to put this into our Factory class...
		//
		include_once("Reg_Core.class.php");
		$this->core = new Test_Core($this, $this->reg);

	}


	function tearDown() {

		$this->core->deleteSimpletestRoles();

	}


} // End of Reg_Admin_Members_Errors_Functional_Test 


