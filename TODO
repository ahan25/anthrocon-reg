

Done
====

TODO
====

- Add "reason on watchlist" to Watchlist

- Port to Drupal 6
	- http://drupal.org/node/114774
	- Info file
	- Change install()
	- Change uninstall()
	- Change update_N()
	- New menu system: http://drupal.org/node/103114
	- reg_init() will now become reg_boot()	
	- watchdog(): Do NOT call t() on messages
	- Unit test fun!

- Store and encrypt credit card numbers
	- Retrieve credit card numbers via an AJAX-powered button that will log the access

- curl_init() missing
	- In WAMP, curl_init() is not installed
	- I should write a check for that function, 

- reg/
	autocomplete="off" in the input tag for the credit card number

- I guess reg_admin_log_view isn't needed since we deprecated those other
	log viewing functions.
	- Let's go back and move that code back into reg_admin_log, and update
		child classes and the factory accordingly.

- If watchlist is empty, display a single row in the watchlist indicating that.

- Timezones when editing levels.  Do we want to do anything there?  
	- Maybe allow an hour field?

- admin/reg/settings/mesages/1234/edit
	- Prevent editing of non-existant message IDs
	- Throw an error and log it

- Messages
	- When editing, instead of "ID 'id'", say "name 'name'"
	- When a message is saved, redirect to the list of messages

- reg-wide email on settings page
	- Remove variable_get() to email addresses
	- Add a box on the settings page that defaults to the site-wide email
	- Write reg_data::get_contact_email()

- Admin
	- Resend confirmation email

- Class architecture
	- Function to send confirmation email for a specific registration
		- Store this confirmation email as a variable?

Long Term
=========

- Can we have an upgrade type?
	- Upgrade table that has a membership type, upgrade options, price, description, etc.

- Do distance calculations
	- http://jan.ucc.nau.edu/~cvm/latlon_formula.html

- 2010 reg
	- Onsite reg
		- Should do something sane when no levels are available
			- Borrow code/message from reg page
		- Maybe have a flag on the levels table if it only applies to onsite registration

	- Theme
		- Work on the theme code at some point
		- Create hidden test page that shows all sorts of different form elements in a demo

- Multi-year code
	- Have a config value for the year, defaulting to the current year
		- Modify badge number assignment code to first check the 
			reg_badge_num table
			- Write a unit test for this!
	- At signup, display a year field for the admin
		- Default to the current year
	- Add year to member search page
	- For /reg, get year from from the level offering
	- Modify badge number assignment code to take a year argument

- Credit card number storage
	- Encrypt card numbers in database
		- Still store last 4 digits in usual location?
	- Display only via an AJAX widget on the transaction log viewing page
		- Access to the full card number should be audited

