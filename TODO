

Done
====

TODO
====

- Unit tests

	Other things to test:

		- admin/
			- For members without badge numbers, I need to NOT display "0000" on the display screen.
				- How to reproduce?  Just call add_member()?
				- Where to fix? format_badge_num()?
				- Write a unit test to catch that
				- Display a blank instead?

	testReg_Member_Admin:
		- Calling drupal_get_messages() multiple times doesn't seem to be a good idea
			- Could I create some methods called set_drupal_error() and
				get_last_drupal_error()?

- Verify page
	- Check for expiration dates in the past

- Check ongoing issue with gmmktime()
	- Do I need to force the is_dst flag to 0?
	- Check issues with timezone, is it being honored on format_date()?
		- http://api.drupal.org/api/function/format_date/5
	- It may make more sense to store the expiration as DATE values, but then I won't 
		get the full suite of Drupal functions.
	- I should probably just convert to date, and add 86400 seconds to each old date
		when converting
		- Rename field to card_expire_legacy?
	- SELECT id, reg_id, card_expire, FROM_UNIXTIME(card_expire) FROM
		reg_trans WHERE DAY(from_unixtime(card_expire)) != 1;

- I guess reg_admin_log_view isn't needed since we deprecated those other
	log viewing functions.
	- Let's go back and move that code back into reg_admin_log, and update
		child classes and the factory accordingly.

- In confirmation email, include the membership type that was purchased.
	- Write unit test for email first

- Filter out "Audit log" from viewing individual registrations.
	- I can write a functionality test for that
		- assertNotUnwantedRaw()

- Timezones when editing levels.  Do we want to do anything there?  
	- Maybe allow an hour field?

- reg/verify/resend should redirect the user to reg/verify after sending the email

- authorize_net
	- When faking authorize.net, I should do this in the authorize_net 
		module as well, and parse the dummy result
		- This will ensure that more of the code is actually executed 
			in testing

- reg/
	autocomplete="off" in the input tag for the credit card number

- admin/reg/settings/mesages/1234/edit
	- Prevent editing of non-existant message IDs
	- Throw an error and log it

- modify code to get the name and last 4 of the card number to get that name
	from the first digit

- Multi-year code
	- At signup, display a year field for the admin
	- For /reg, get year from from the level offering
	- Modify badge number assignment code to take a year argument

- Messages
	- When editing, instead of "ID 'id'", say "name 'name'"
	- When a message is saved, redirect to the list of messages

- reg-wide email on settings page
	- Remove variable_get() to email addresses
	- Add a box on the settings page that defaults to the site-wide email
	- Write reg_data::get_contact_email()

- Some utility to print unused badge numbers

- Keep in mind that I can create other modules in that directory
	- Dealer reg module?
	- Omaga List module?
	- Staff reg module
	- Onsite reg module?
		- Here's some ActiveXCode to print things up from MSIE:
			var app = new ActiveXObject("word.application");

			// This could/should be replaced with a web-based path?
			var file = "file:///C:/wamp/www/template.doc";

			app.Visible = false;
			app.Documents.Open(file);

			app.ActiveDocument.PrintOut();
			app.ActiveDocument.close(false);

			app.quit();

- Admin
	- Resend confirmation email

- Class architecture
	- Function to send confirmation email for a specific registration
		- Store this confirmation email as a variable?

Long Term
=========

- Can we have an upgrade type?
	- Upgrade table that has a membership type, upgrade options, price, description, etc.

- Export data as a spreadsheet
	- Main membership data
	- Staff data separately?

